@attribute [Route($"/{Routes.OnGoingTest}/{{testId}}")]
@using Decenea.WebApp.Components.Countdown
<PageTitle>OnGoingTestPage</PageTitle>

@if (TestContainer.OngoingTest.StartingTime > DateTime.Now)
{
    <h4>The test is starting in @((TestContainer.OngoingTest.StartingTime - DateTime.Now).ToString("mm:ss")))</h4>
    <h4>Or you can start now</h4>
    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@StartTest">Start Test!</MudButton>

}else if (TestContainer.OngoingTest.StartingTime == DateTime.MinValue)
{
    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@StartTest">Start Test!</MudButton>
}
else
{
    <MudGrid>
        <MudItem xs="12">
            <Countdown TotalTimeInSeconds="@((int)(TestContainer.OngoingTest.FinishTime - DateTime.Now).TotalSeconds)"
                       Finished="b => Console.WriteLine(b)"
                       ></Countdown>
        </MudItem>
        @if (TestContainer.OngoingTest.GenericQuestionModels.Any())
        {
            <MudItem xs="12" Style="height: 90%">
                <QuestionTypesComponent Test="TestContainer.OngoingTest"
                                        PresentationOnly="true"
                                        @bind-Question="@_genericQuestionModels[ActiveQuestionIndex]"/>
            </MudItem>
            <MudItem xs="12" Style="display: flex">
                @if (ActiveQuestionIndex > 0)
                {
                    <MudButton OnClick="PreviousQuestion">Previous</MudButton>
                }
                <MudSpacer/>
                @if (ActiveQuestionIndex < TestContainer.OngoingTest.GenericQuestionModels.Count - 1)
                {
                    <MudButton OnClick="NextQuestion">Next</MudButton>
                }
            </MudItem>
        }
    </MudGrid>
}

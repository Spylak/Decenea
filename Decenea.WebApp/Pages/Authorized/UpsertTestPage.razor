@attribute [Route($"/{Routes.UpsertTest}")]
@attribute [Route($"/{Routes.UpsertTest}/{{testId}}")]
@attribute [Authorize]

@using Decenea.WebApp.Models.QuestionTypes
@using Decenea.WebApp.Components.TestComponents
<PageTitle>@(string.IsNullOrWhiteSpace(TestId) ? "Test Creation" : "Modify test")</PageTitle>

<h3 style="text-align: center">@(string.IsNullOrWhiteSpace(TestId) ? "Test Creation" : "Modify test")</h3>
<MudGrid Style="margin: auto;max-width: 90%">

    <MudItem xs="4">
        <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="@(async () => await TestContainer.UpsertTestToIndexedDb(TestContainer.UpsertTest))">Save Test</MudButton>
    </MudItem>
    <MudItem xs="4">
        <MudButton Color="Color.Warning" Variant="Variant.Filled" OnClick="@(async () => await NewTest())">New Test</MudButton>
    </MudItem>
    <MudItem xs="4">
        <MudButton Color="Color.Warning" Variant="Variant.Filled" OnClick="@(async () => await SampleTest())">Sample Test</MudButton>
    </MudItem>
    <MudItem xs="12">
        <TestPropertiesForm Test="@TestContainer.UpsertTest"></TestPropertiesForm>
    </MudItem>
    <MudItem xs="12">
        <MudDataGrid T="GenericQuestionModel" Items="@TestContainer.UpsertTest.GenericQuestionModels"
                     Bordered="true"
                     Dense="true"
                     ReadOnly="true"
                     Hover="true"
                     FilterMode="DataGridFilterMode.ColumnFilterRow"
                     Filterable="true"
                     FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive"
                     Striped="true"
                     RowClick="@(async itm => await QuestionDialog(itm.Item.QuestionType, itm.Item.Id))"
                     ColumnResizeMode="ResizeMode.Column">
            <ToolBarContent>
                <MudSpacer/>
                <MudIconButton
                    Icon="@Icons.Material.Filled.Settings"
                    Color="Color.Warning"
                    OnClick="@(() => GlobalFunctionService.ConsoleLogAsync(""))">
                </MudIconButton>
                <MudIconButton
                    OnClick="@(async () => await QuestionDialog())"
                    Icon="@Icons.Material.Filled.Add"
                    Style="margin:-2px 5px 0"
                    Color="Color.Tertiary"
                    Variant="Variant.Filled"/>
            </ToolBarContent>
            <Columns>
                <TemplateColumn
                    Filterable="false"
                    Sortable="false"
                    Editable="false">
                    <CellTemplate>
                        <MudIconButton
                            Icon="@Icons.Material.Filled.Delete"
                            Color="Color.Error"
                            OnClick="@(() => TestContainer.UpsertTest.RemoveQuestionById(context.Item.Id))"/>
                    </CellTemplate>
                </TemplateColumn>
                <PropertyColumn Property="x => x.Id"
                                Editable="false">
                </PropertyColumn>
                <PropertyColumn Property="x => x.Description"
                                Editable="false">
                </PropertyColumn>
                <PropertyColumn Property="x => x.QuestionType"
                                Editable="false">
                </PropertyColumn>
            </Columns>
            <PagerContent>
                <MudDataGridPager T="GenericQuestionModel"/>
            </PagerContent>
        </MudDataGrid>
    </MudItem>
</MudGrid>
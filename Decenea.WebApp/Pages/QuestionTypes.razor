@attribute [Route($"/{Routes.QuestionTypes}")]
<PageTitle>QuestionTypes</PageTitle>

<h2 style="text-align: center">QuestionTypes</h2>
<MudGrid>
    <MudItem xs="12" sm="3">
        <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
            <MudTabs Elevation="0" Outlined="true" @bind-ActivePanelIndex="activeIndex" Position="Position.Left">
                <MudTabPanel OnClick="@(() => OpenOverlay(QuestionTypeValues.DragAndDrop))" Text="Drag and drop" ID='"pn_one"'></MudTabPanel>
                <MudTabPanel OnClick="@(() => OpenOverlay(QuestionTypeValues.OrderingDragAndDrop))" Text="Ordering DragAndDrop" ID='"pn_one"'></MudTabPanel>
                <MudTabPanel OnClick="@(() => OpenOverlay(QuestionTypeValues.Dropdown))" Text="Dropdown" ID='"pn_two"'></MudTabPanel>
                <MudTabPanel OnClick="@(() => OpenOverlay(QuestionTypeValues.FillBlank))" Text="Fill Blank" ID='"pn_three"'></MudTabPanel>
                <MudTabPanel OnClick="@(() => OpenOverlay(QuestionTypeValues.FillBlankDropdown))" Text="Space In Text" ID='"pn_three"'></MudTabPanel>
                <MudTabPanel OnClick="@(() => OpenOverlay(QuestionTypeValues.MultipleChoice))" Text="Multiple Choice" ID='"pn_three"'></MudTabPanel>
                <MudTabPanel OnClick="@(() => OpenOverlay(QuestionTypeValues.MultipleChoiceSingle))" Text="Multiple Choice Single" ID='"pn_three"'></MudTabPanel>
                <MudTabPanel OnClick="@(() => OpenOverlay(QuestionTypeValues.MultipleYesOrNo))" Text="Yes or No" ID='"pn_three"'></MudTabPanel>
                <MudTabPanel OnClick="@(() => OpenOverlay(QuestionTypeValues.Ordering))" Text="Ordering" ID='"pn_three"'></MudTabPanel>
            </MudTabs>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudSelect T="string"  Value="@(Visibility.FirstOrDefault(i=>i.Value==true).Key )" ValueChanged="@(choice =>OpenOverlay(choice) )" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter"> 
                @foreach (var itm in Visibility)
                {
                    <MudSelectItem  T="string" Value="@(itm.Key)"></MudSelectItem>
                }
            </MudSelect>
        </MudHidden>
    </MudItem>
    <MudItem xs="12" sm="9">
        @if (Visibility[QuestionTypeValues.FillBlank])
        {
            <FillBlankQuestion ReadOnly="true" FillBlankQuestionBaseModel="FillBlank"></FillBlankQuestion>
        }
        else if (Visibility[QuestionTypeValues.FillBlankDropdown])
        {
            <FillBlankDropdownQuestion ReadOnly="true" FillBlankDropdownQuestionBaseModel="FillBlankDropdownQuestion"></FillBlankDropdownQuestion>
        }
        else if (Visibility[QuestionTypeValues.DragAndDrop])
        {
            <DragAndDropQuestion ReadOnly="true" DragAndDropQuestionBaseModel="DragAndDrop"></DragAndDropQuestion>
        }
        else if (Visibility[QuestionTypeValues.Dropdown])
        {
            <DropdownQuestion ReadOnly="true" DropdownQuestionBaseModel="Dropdown"></DropdownQuestion>
        }
        else if (Visibility[QuestionTypeValues.MultipleChoice])
        {
            <MultipleChoiceQuestion ReadOnly="true" MultipleChoiceQuestionBaseModel="MultipleChoice"></MultipleChoiceQuestion>
        }
        else if (Visibility[QuestionTypeValues.MultipleYesOrNo])
        {
            <MultipleYesOrNoQuestion ReadOnly="true" MultipleYesOrNoQuestionBaseModel="MultipleYesOrNo"></MultipleYesOrNoQuestion>
        }
        else if (Visibility[QuestionTypeValues.Ordering])
        {
            <OrderingQuestion ReadOnly="true" OrderingQuestionBaseModel="OrderingQuestionModel"></OrderingQuestion>
        }
        else if (Visibility[QuestionTypeValues.MultipleChoiceSingle])
        {
            <MultipleChoiceSingleQuestion ReadOnly="true" MultipleChoiceSingleQuestionBaseModel="MultipleChoiceSingle"></MultipleChoiceSingleQuestion>
        }
        else if (Visibility[QuestionTypeValues.OrderingDragAndDrop])
        {
            <OrderingDnDQuestion ReadOnly="true" OrderingDnDQuestionBaseModel="OrderingDnDQuestionModel"></OrderingDnDQuestion>
        }

    </MudItem>
</MudGrid>


@code
{

}